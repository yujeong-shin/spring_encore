plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.encore'
//빌드된 jar파일의 버전명
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	//의존성(라이브러리)을 가져오는 대상 repository (저장소)
	//내부망에 구축되어 있는 프로젝트의 경우 nexus와 같은 라이브러리를 사용하여 내부망 repository 사용
	//maven { url "http://nexus.XXXXX.com:8081/nexus/content/groups/public/" }
	mavenCentral()
}

//starter 종속성은 별도의 버전관리 필요없음. (알아서 호환성을 맞춰줌)
dependencies {
	//implementation : 컴파일 시점과 런타임 시점 모두에 필요
	//compileOnly : 컴파일 시에만 필요, lombok 어노테이션들.
	//runtimeOnly : 런타임 시에만 필요, DB관련 의존성과 로그 의존성, 연결 이벤트가 발생할 때 가져오면 됨.
	//코드 최적화를 위해 사용한다.

	//타임리프 관련한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//스프링 mvc(model, view, controller) 구조의 web서비스 관련 의존성
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//테스트를 위한 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//DB 연결을 위한 의존성 : jdbc, mariadb 클라이언트
//	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.mariadb.jdbc:mariadb-java-client'

	//lombok 추가
	//Getter, Setter 및 로그관련 의존성
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//spring data jpa 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//mybatis 관련 의존성 추가
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

	//jsp를 위한 라이브러리 추가
	//apache 사용 -> tomcat의 정적 컨텐츠 서버를 대신해서 사용
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:'
	//jstl문법 사용 시에 아래 의존성 추가
	//implementation 'javax.servlet:jstl'

	// Swagger 사용을 위한 의존성 추가
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

tasks.named('test') {
	//테스트 라이브러리로 주로 JUnit을 사용
	useJUnitPlatform()
}
